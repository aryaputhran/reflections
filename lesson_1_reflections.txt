How did viewing a diff between two versions of a file help you see the bug that was introduced?

All the common lines were removed and it became easier to concentrate on the differences.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Mistakes and regressions can be found out and in the case of crashes, previous version can be used.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros : compilable codes,easier to make sense of the code,more control. Cons:loss of data if forgets to commit,too big commit being useless.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git is specific for software coding where to apply a functionality , changes have to be made in several files.

How can you use the commands git log and git diff to view the history of files?

git log gives all details of commits and git diff gives the difference between two commits

How might using version control make you more confident to make changes that could break something?

any changes could be reverted , and bugs easily traced.

Now that you have your workspace set up, what do you want to try using Git for?

start coding right away?
